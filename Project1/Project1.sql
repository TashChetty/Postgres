-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE  Employees
(
    emp_id bigserial NOT NULL,
    first_name character varying(50) NOT NULL,
    surname character varying(50) NOT NULL,
    gender character NOT NULL,
    address character varying(100) NOT NULL,
    email character varying(50) NOT NULL,
    depart_id bigint NOT NULL,
    role_id bigint NOT NULL,
    salary_id bigint NOT NULL,
    overtime_id bigint NOT NULL,
    CONSTRAINT "Employees" PRIMARY KEY (emp_id)
);

INSERT INTO Employees (emp_id,first_name, surname, gender, address, email, depart_id, role_id, salary_id, overtime_id)
VALUES 
--     (1,'John', 'Doe', 'M', '123 Main St', 'john@example.com', 1, 2, 3, 4),
--     (2,'Jane', 'Smith', 'F', '456 Elm St', 'jane@example.com', 2, 2, 3, 4),
--     (3,'Alice', 'Johnson', 'F', '789 Oak St', 'alice@example.com', 3, 3, 4, 5),
--     (4,'Bob', 'Williams', 'M', '101 Pine St', 'bob@example.com', 4, 3, 4, 5),
--     (5,'Eva', 'Brown', 'F', '222 Cedar St', 'eva@example.com', 5, 4, 5, 6);
    (5,'Eva', 'Brown', 'F', '222 Cedar St', 'eva@example.com', 9, 4, 5, 6);
  
SELECT * FROM Employees;
DROP TABLE Employees;

CREATE TABLE Department
(
    depart_id bigserial NOT NULL,
    depart_name character varying(50) NOT NULL,
    depart_city character varying(50) NOT NULL,
    CONSTRAINT "Department" PRIMARY KEY (depart_id)
);

INSERT INTO Department (depart_id, depart_name, depart_city)
VALUES 
   -- (1,'Sales', 'New York'),
   -- (2,'Marketing', 'Los Angeles'),
--     (3,'HR', 'Chicago'),
--     (4,'Engineering', 'San Francisco'),
--     (5,'Finance', 'Houston'),
    (5,'IT', 'Houston');
SELECT * FROM Department;
DROP TABLE Department
--i get the error realtion already exists - when running belowcode - i get falae. i removed if exists and public and it wprks
--SELECT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'Department');

CREATE TABLE Roles
(
    role_id bigserial NOT NULL,
    role character varying(50) NOT NULL,
    PRIMARY KEY (role_id)
);

INSERT INTO Roles (role)
VALUES 
    ('Manager'),
    ('Developer'),
    ('Designer'),
    ('Analyst'),
    ('Administrator');
SELECT * FROM Roles;

CREATE TABLE Salaries
(
    salary_id bigserial NOT NULL,
    salary_pa integer NOT NULL,
    PRIMARY KEY (salary_id)
);
--DROP TABLE Salaries;
INSERT INTO Salaries (salary_pa)
VALUES 
    (60000),
    (75000),
    (55000),
    (80000),
    (50000);
SELECT * FROM Salaries;

CREATE TABLE "Overtime Hours"
(
    overtime_id bigserial NOT NULL,
    overtime_hours numeric(5, 2) NOT NULL,
    PRIMARY KEY (overtime_id)
);
--DROP TABLE Overtime Hours;
INSERT INTO "Overtime Hours" (overtime_hours)
VALUES 
    (2.50),
    (3.00),
    (1.80),
    (2.00),
    (2.30);
SELECT * FROM "Overtime Hours";

ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (depart_id)
    REFERENCES public."Department" (depart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (role_id)
    REFERENCES public."Roles" (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (salary_id)
    REFERENCES public."Salaries" (salary_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (overtime_id)
    REFERENCES public."Overtime Hours" (overtime_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
    
 SELECT * FROM Employees;
 SELECT * FROM Department;
 SELECT * FROM Roles;
 SELECT * FROM Salaries;
 SELECT * FROM "Overtime Hours";
 
 SELECT 
e.emp_id,
e.first_name,
e.surname,
e.gender,
e.address,
e.email,
d.depart_id,
d.depart_name,
r.role_id,
r.role,
s.salary_id,
s.salary_pa,
o.overtime_id,
o.overtime_hours

FROM Employees AS e

LEFT JOIN Department AS d
ON e.depart_id = d.depart_id

LEFT JOIN Roles AS r
ON e.role_id = r.role_id

LEFT JOIN Salaries AS s
ON e.salary_id = s.salary_id

LEFT JOIN "Overtime Hours" AS o
ON e.overtime_id = o.overtime_id;


END;